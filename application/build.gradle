import org.apache.tools.ant.filters.ReplaceTokens

group 'taxi.drive.app'
version projectVersion

buildscript {
    repositories {
        repositories {
            mavenCentral()
            jcenter()
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE',
                'gradle.plugin.com.markklim.plugins:release-to-docker:0.9',
                'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.markklim.plugins.rtd'
apply plugin: 'org.sonarqube'

jar {
    archiveName = 'taxi-drive-app.jar'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.12'

    compile 'org.springframework.boot:spring-boot-starter-jersey:1.5.9.RELEASE'
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.19'
    //compile 'org.springframework.boot:spring-boot-starter-web:1.5.9.RELEASE'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0'
    //compile 'net.bull.javamelody:javamelody-spring-boot-starter:1.69.0'

    compile 'org.springframework.boot:spring-boot-starter-cache:1.5.9.RELEASE'
    compile 'net.sf.ehcache:ehcache:2.10.4'

    compile 'org.postgresql:postgresql:42.1.4'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.9.RELEASE'

    compile 'org.springframework.boot:spring-boot-starter-security:1.5.9.RELEASE'

    compile 'systems.vostok.tda:tda-district-mapper:0.1.6'
    compile 'systems.vostok.tda:tda-excel-parser:0.1.6'

    testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.9.RELEASE'
    testCompile 'org.testng:testng:6.11'
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
    filter ReplaceTokens, tokens: [
            projectVersion: projectVersion
    ]
}

test {
    useTestNG {
        exclude 'integration/**'
    }
}

task integrationTest(type: Test) {
    useTestNG {
        include 'integration/**'
    }
}

releaseToDocker {
    dockerHub = true
    registryUrl = 'markklim'
    imageName = 'taxi-drive-app'
    dockerFileLocation = 'src/main/resources/docker'
    imageFileName = 'taxi-drive-app.war'
    imageVersion = projectVersion
    username = dockerUsername
    password = dockerPassword
    rmiAfterPush = true
}


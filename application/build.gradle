import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        repositories {
            mavenCentral()
            jcenter()
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                'gradle.plugin.com.markklim.plugins:release-to-docker:0.9',
                'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.markklim.plugins.rtd'
apply plugin: 'org.sonarqube'

jar {
    archiveName = 'taxi-drive-app.jar'
}

dependencies {
    compile lib.groovy_all
    compile lib.spring_boot_configuration_processor

    compile lib_pack.vostok_libs
    compile lib_pack.rest_api
    compile lib_pack.validation
    compile lib_pack.cache
    compile lib_pack.db
    compile lib_pack.db_support
    compile lib_pack.security
    compile lib_pack.metrics

    testCompile lib_pack.test
    testCompile lib_pack.cucumber_test
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
    filter ReplaceTokens, tokens: [
            projectVersion: projectVersion
    ]
}


bootRun {
    systemProperties = System.properties as Map
}

test {
    useJUnitPlatform {
        exclude(
                '**/*TestIntegration*',
                '**/FunctionalRunner*',
        )
    }
}

task testIntegration(type: Test) {
    useJUnitPlatform {
        include '**/*TestIntegration*'
    }
    systemProperties = System.properties as Map
}

task testFunctional(type: Test) {
    useJUnitPlatform {
        include '**/FunctionalRunner*'
    }
    systemProperties = System.properties as Map
}

releaseToDocker {
    dockerHub = true
    registryUrl = 'markklim'
    imageName = 'taxi-drive-app'
    dockerFileLocation = ''
    imageFileName = 'taxi-drive-app.jar'
    imageVersion = projectVersion
    username = dockerUsername
    password = dockerPassword
    rmiAfterPush = true
}


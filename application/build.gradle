import org.apache.tools.ant.filters.ReplaceTokens


buildscript {
    repositories {
        repositories {
            mavenCentral()
            jcenter()
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                'gradle.plugin.com.markklim.plugins:release-to-docker:0.9',
                'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.markklim.plugins.rtd'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

jar {
    archiveName = 'taxi-drive-app.jar'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile lib.groovy_all
    compile lib.spring_boot_configuration_processor
    //compile lib.javamelody_spring_boot_starter

    compile lib_pack.vostok_libs
    compile lib_pack.rest_api
    compile lib_pack.validation
    compile lib_pack.cache
    compile lib_pack.db
    compile lib_pack.db_support
    compile lib_pack.security

    testCompile lib_pack.test





    /*compile 'org.codehaus.groovy:groovy-all:2.4.12'

    compile "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    compile "org.springframework.boot:spring-boot-starter-jersey:${springBootVersion}"
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.27'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0'
    //compile 'net.bull.javamelody:javamelody-spring-boot-starter:1.69.0'

    compile 'javax.validation:validation-api:2.0.1.Final'
    compile 'org.hibernate.validator:hibernate-validator:6.0.9.Final'

    compile "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"
    compile 'net.sf.ehcache:ehcache:2.10.4'

    compile 'org.postgresql:postgresql:42.1.4'
    compile 'com.zaxxer:HikariCP:2.7.8'
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile 'org.hibernate:hibernate-core:5.2.12.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.2.12.Final'
    compile 'org.hibernate:hibernate-search-orm:5.9.1.Final'
    compile 'org.infinispan:infinispan-directory-provider:9.0.1.Final'
    compile 'org.springframework:spring-orm:4.3.16.RELEASE'

    compile "org.springframework.boot:spring-boot-starter-data-cassandra:${springBootVersion}"

    compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    compile 'org.keycloak:keycloak-spring-boot-starter:4.2.0.Final'

    compile 'systems.vostok.tda:tda-district-mapper:0.1.6'
    compile 'systems.vostok.tda:tda-excel-parser:0.1.6'

    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"*/
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
    filter ReplaceTokens, tokens: [
            projectVersion: projectVersion
    ]
}


bootRun {
    systemProperties = System.properties as Map
}

test {
    useJUnitPlatform {
        exclude 'integration/**'
    }
}

task integrationTest(type: Test) {
    //useJUnitPlatform()
    useJUnit {
        include 'integration/**'
    }
}

releaseToDocker {
    dockerHub = true
    registryUrl = 'markklim'
    imageName = 'taxi-drive-app'
    dockerFileLocation = ''
    imageFileName = 'taxi-drive-app.jar'
    imageVersion = projectVersion
    username = dockerUsername
    password = dockerPassword
    rmiAfterPush = true
}


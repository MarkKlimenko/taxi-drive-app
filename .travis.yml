language: groovy
dist: trusty

services:
  - docker

sudo: true

addons:
  sonarcloud:
    organization: hurryfox-sonar-org-key
    token:
      secure: $SONAR_TOKEN
    branches:
      - master

cache:
  directories:
    - $HOME/.m2/repository
    - $HOME/.sonar/cache
    - $HOME/.gradle
    - .gradle


before_install:
  - chmod +x gradlew
  - sudo service postgresql stop
  - while lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done

install: true

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock


stages:
  - name: unit_tests_and_sonar_scaner
  - name: integration_tests
  - name: set_minor_version
    if: branch = release
  - name: release_docker
    if: branch = release
  - name: deploy_prod
    if: branch = deploy/prod


jobs:
  include:
  - stage: unit_tests_and_sonar_scaner
    script:
      - ./gradlew test
#      - sonar-scanner

  - stage: integration_tests
    script:
      - docker run --name cassandra -p 9042:9042 -d cassandra:3.11
      - while ! docker run --link cassandra:cassandra --rm cassandra:3.11 cqlsh cassandra; do
            echo 'Waiting for cassandra...';
            sleep 3;
        done;
      - ./gradlew :migrations-db-support:migratorExecute

      - docker run --name postgres -p 5432:5432 -d -e POSTGRES_USER=tda -e POSTGRES_PASSWORD=123456 postgres:10
      - while ! docker run --link postgres:postgres --rm postgres:10 psql postgresql://tda:123456@postgres/tda; do
            echo 'Waiting for postgres...';
            sleep 3;
        done;
      - gradlew :migrations-db-application:flywayMigrate

      - ./gradlew testIntegration

  - stage: set_minor_version
    script:
      - ./gradlew setMinorVersion -PminorVersion=$TRAVIS_BUILD_NUMBER -PciBranchName=$TRAVIS_BRANCH -PciCredentials=$CREDENTIALS -PciProjectPath=$PROJECT_PATH;

  - stage: release_docker
    script:
      - ./gradlew build;
      - ./gradlew releaseToDocker -PdockerUsername=$DOCKER_USER -PdockerPassword=$DOCKER_PASSWORD;

  - stage: deploy_prod
    script:
        - sudo apt-get install -qq sshpass;
          sshpass -p $DEPLOYER_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOYER_USER@vostok.systems docker stop tda || true &&
              sshpass -p $DEPLOYER_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOYER_USER@vostok.systems docker rm tda || true;
          sshpass -p $DEPLOYER_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOYER_USER@vostok.systems docker pull markklim/taxi-drive-app:0.1;
          sshpass -p $DEPLOYER_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOYER_USER@vostok.systems
              docker run
              --restart always
              --name tda
              --net dockernet
              --ip 172.18.0.21
              -p 8087:8080
              -e JAVA_OPTS=\"-Dspring.profiles.active=prod -Dspring.data.cassandra.username=$CASSANDRA_USER -Dspring.data.cassandra.password=$CASSANDRA_PASSWORD\"
              -d
              markklim/taxi-drive-app:0.1;
